
1.  nonNull(docAccountDetails.getNumber().getValue())
2.  Objects.nonNull(txs2BGroupedDocuments.getBatchCurrency())
3.  String notificationId=Objects.nonNull(res.getNotificationId()) ? res.getNotificationId().getValue() :null
4.  .flatccy(pricingDetails.getFlatCurrencyAmount()!=null ? pricingDetails.getFlatCurrencyAmount().getCurrency(): null)
5.  StringUtils.isNotBlank(goodsQuantity)
6. StringUtils.nonEmptyOrNull(goodsQuantity);
---------------------------------------------------------------------------------------------------------------------------------------------------------
if(!CollectionUtils.isEmpty(fevFinanceData.getCurrencyConversion())){
}
------------------------------------------------------------------------------------------------------------
if(CollectionUtils.isNotEmpty(documentEvent.getDocumentDetails().getAccountDetails())){
}
-------------------------------------------------------------------------------------------------
if(charges!=null && charges.getAdhocCharges()!=null && !charges.getAdhocCharges().isEmpty()){
          getAdhocCharges is a list
}
----------------------------------------------------------------------------------------------------
if(MapUtils.isNotEmpty(vcaAccountDetails)){
    vcaAccountDetails is a map
}
------------------------------------------------------------------------------------------------
ObjectMapper om =new ObjectMapper();
om.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
om.registerModule(new JavaTimeModule());
TxAdapotorNotificationPayload  res=om.readValue(message,TxAdapotorNotificationPayload.class);
messsage is a string
--------------------------------------------------------------------------------------------------------------
POSTGRES

@TypeDef(name="jsonb", typeClass=JsonBinaryType.class)
public class TXSystemChaneelMessage implements Serializable{
          @Type(type="jsonb")
          @Column(name="payload", columnDefinition="jsonb")
          private Object payload;
}
----------------------------------------------------------------------------------------------------------------
createEvenr.setTimeStamp(LocalDateTime.now());

---------------------------------------------------------------------------------------
private TXJournalListCreatedEvent  loadcreatedEvent() throws JsonPareseException ,JsonMappingException,IOException{
          URL evenUrl=new URL("file:src/test/resources/newstepsaga/TXJournalListCreatedEvent.json")
          return objectMapper.readValue(evenUrl,TXJournalListCreatedEvent.class);
}
---------------------------------------------------------------------------------------------------------------------------

@Slf4j
log.error("Error accessing L1 transactionDetails for transaction..{}..error..{}",transactionStepReference,e);
log.info("Unable to retrieve batch/transacton details for request id..{}..and transaction..{}",externalRequestId,transactionStepReference);
log.info("Document fetch for transaction..{} batch id is..{} documentPageNumber...{} documentPageSIze..{} and url..{}",step,id,1,documentPageSize,url)
----------------------------------------------------------------------------------------------------------------------------------------------------------
private List<TXS2BHsCodes> constructHsCodesDetails(TXOdsDocumendetails  documentdetails){
          TXS2BHsCodes hscode=new TXS2BHsCodes();
          List<TXS2BHsCodes> hs= new ArrayList<>();
          if(Objects.nonNull(documentdetails.getGoodsDetails())){
                    documentdetails.getGoodsDetails().forEach(x->{
                              if(x.getGoodsDetails().getHscode()!=null){
                                   hscode.setHscode(x.getHscode())     
                              }
                              hs.add(hscode);
                    });
          }
          return hs;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------

anyMatch
===============
list.stream.anyMatch(e->e!=null && e.getCoreParty()!=null && client.getPartyRole()!=null  && e.getCoreParty().getValue().equalsIgnoreCase(client.getPartyRole().getValue()))

======================================================================================================================================================================

=> && referenceDataAMLDetailsList.getReferenceDataAMLDetails.stream().anyMatch(data->data.getRiskIndictor()!=null
                                                                          && data.getRiskIndictor().getValue()!=null
                                                                          && data.getRiskIndictor().getValue().equals(riskDataDto.getRiskIndicatorId().getValue())
                                                                          && data.getRiskThreshholdAmount()!=null
                                                                          && command.getTransactionAmount().getUnformattedvalue().getValue().compareTo(data.getRiThresholdAmount().getFormattedValue().getValue())<=0)

=>List<String> bookingLocation=CollectionUtils.isNotEmpty(query.getTxBookingLocation()) ? query.getTxbookingLocation().stream().map(TXBookLocation::getValue).collect(Collectors.toList()):new ArrayList(); 













